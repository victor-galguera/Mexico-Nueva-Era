<?php
/**
 * @file
 * Sets up a custom filter that enables Block Shortcodes.
 */

/**
 * Implements hook_filter_info().
 */
function block_shortcode_filter_info() {

  $filters['block_shortcode'] = array(
    'title' => t('Block Shortcodes'),
    'description' => t('Sets up a custom filter that enables Block Shortcodes.'),
    'prepare callback' => 'block_shortcode_filter_node_embed_prepare',
    'process callback' => 'block_shortcode_filter_block_shortcode_process',
    'tips callback'  => 'block_shortcode_filter_block_shortcode_tips',
    'cache' => FALSE,
  );

  return $filters;

}

/**
 * Prepare callback for callback_filter_prepare.
 */
function block_shortcode_filter_block_shortcode_prepare($text, $filter, $format, $langcode, $cache, $cache_id) {

  return $text;

}

/**
 * Process callback for callback_filter_process.
 */
function block_shortcode_filter_block_shortcode_process($text, $filter, $format, $langcode, $cache, $cache_id) {

  // Grab the relevant data from shortcode and convert it to block embed.
  return preg_replace_callback('/\[block module:(.*) delta:(.*)\]/', '_block_shortcode_style_make_replacements', $text);

}

/**
 * Tips callback for callback_filter_tips.
 */
function block_shortcode_filter_block_shortcode_tips($filter, $format, $long) {

  return t('[block module:some_module delta:123] - embed a block with given 
            identification (module and delta). See block\'s edit page for a specific example.'
          );

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function block_shortcode_form_block_admin_configure_alter(&$form, &$form_state, $form_id) {

  $module = $form['module']['#value'];
  $delta = $form['delta']['#value'];
  $form['settings']['block_shortcode_example'] = array(
    '#type' => 'textfield',
    '#title' => 'Shortcode:',
    '#default_value' => '[block module:' . $module . ' delta:' . $delta . ']',
    '#description' => t('Copy the text above and paste anywhere that allows the Block Shortcode filter'),
    '#attributes' => array('readonly' => 'readonly'),

  );

}

/**
 * Provides the replacement HTML to be rendered in place of the short code.
 */
function _block_shortcode_style_make_replacements($matches) {

  $module = $matches[1];
  $view = 'block_view';
  $delta = $matches[2];

  $block = module_invoke($module, $view, $delta);

  $html = '<div class="shortcode-block">';
  $html .= render($block['content']);
  $html .= '</div>';

  return $html;

}
